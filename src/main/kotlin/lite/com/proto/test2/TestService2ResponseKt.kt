//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: test2.proto

package com.proto.test2;

@kotlin.jvm.JvmName("-initializetestService2Response")
public inline fun testService2Response(block: com.proto.test2.TestService2ResponseKt.Dsl.() -> kotlin.Unit): com.proto.test2.TestService2Response =
  com.proto.test2.TestService2ResponseKt.Dsl._create(com.proto.test2.TestService2Response.newBuilder()).apply { block() }._build()
public object TestService2ResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.proto.test2.TestService2Response.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.proto.test2.TestService2Response.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.proto.test2.TestService2Response = _builder.build()

    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#specifying-rules
     *  https://developers.google.com/protocol-buffers/docs/proto#scalar
     * </pre>
     *
     * <code>optional double optionalDouble = 1;</code>
     */
    public var optionalDouble: kotlin.Double
      @JvmName("getOptionalDouble")
      get() = _builder.getOptionalDouble()
      @JvmName("setOptionalDouble")
      set(value) {
        _builder.setOptionalDouble(value)
      }
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#specifying-rules
     *  https://developers.google.com/protocol-buffers/docs/proto#scalar
     * </pre>
     *
     * <code>optional double optionalDouble = 1;</code>
     */
    public fun clearOptionalDouble() {
      _builder.clearOptionalDouble()
    }
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#specifying-rules
     *  https://developers.google.com/protocol-buffers/docs/proto#scalar
     * </pre>
     *
     * <code>optional double optionalDouble = 1;</code>
     * @return Whether the optionalDouble field is set.
     */
    public fun hasOptionalDouble(): kotlin.Boolean {
      return _builder.hasOptionalDouble()
    }

    /**
     * <code>required double requiredDouble = 3;</code>
     */
    public var requiredDouble: kotlin.Double
      @JvmName("getRequiredDouble")
      get() = _builder.getRequiredDouble()
      @JvmName("setRequiredDouble")
      set(value) {
        _builder.setRequiredDouble(value)
      }
    /**
     * <code>required double requiredDouble = 3;</code>
     */
    public fun clearRequiredDouble() {
      _builder.clearRequiredDouble()
    }
    /**
     * <code>required double requiredDouble = 3;</code>
     * @return Whether the requiredDouble field is set.
     */
    public fun hasRequiredDouble(): kotlin.Boolean {
      return _builder.hasRequiredDouble()
    }

    /**
     * <code>optional int32 optionalInt32 = 4;</code>
     */
    public var optionalInt32: kotlin.Int
      @JvmName("getOptionalInt32")
      get() = _builder.getOptionalInt32()
      @JvmName("setOptionalInt32")
      set(value) {
        _builder.setOptionalInt32(value)
      }
    /**
     * <code>optional int32 optionalInt32 = 4;</code>
     */
    public fun clearOptionalInt32() {
      _builder.clearOptionalInt32()
    }
    /**
     * <code>optional int32 optionalInt32 = 4;</code>
     * @return Whether the optionalInt32 field is set.
     */
    public fun hasOptionalInt32(): kotlin.Boolean {
      return _builder.hasOptionalInt32()
    }

    /**
     * <code>required int32 requiredInt32 = 5;</code>
     */
    public var requiredInt32: kotlin.Int
      @JvmName("getRequiredInt32")
      get() = _builder.getRequiredInt32()
      @JvmName("setRequiredInt32")
      set(value) {
        _builder.setRequiredInt32(value)
      }
    /**
     * <code>required int32 requiredInt32 = 5;</code>
     */
    public fun clearRequiredInt32() {
      _builder.clearRequiredInt32()
    }
    /**
     * <code>required int32 requiredInt32 = 5;</code>
     * @return Whether the requiredInt32 field is set.
     */
    public fun hasRequiredInt32(): kotlin.Boolean {
      return _builder.hasRequiredInt32()
    }

    /**
     * <code>optional int64 optionalInt64 = 6;</code>
     */
    public var optionalInt64: kotlin.Long
      @JvmName("getOptionalInt64")
      get() = _builder.getOptionalInt64()
      @JvmName("setOptionalInt64")
      set(value) {
        _builder.setOptionalInt64(value)
      }
    /**
     * <code>optional int64 optionalInt64 = 6;</code>
     */
    public fun clearOptionalInt64() {
      _builder.clearOptionalInt64()
    }
    /**
     * <code>optional int64 optionalInt64 = 6;</code>
     * @return Whether the optionalInt64 field is set.
     */
    public fun hasOptionalInt64(): kotlin.Boolean {
      return _builder.hasOptionalInt64()
    }

    /**
     * <code>required int64 requiredInt64 = 7;</code>
     */
    public var requiredInt64: kotlin.Long
      @JvmName("getRequiredInt64")
      get() = _builder.getRequiredInt64()
      @JvmName("setRequiredInt64")
      set(value) {
        _builder.setRequiredInt64(value)
      }
    /**
     * <code>required int64 requiredInt64 = 7;</code>
     */
    public fun clearRequiredInt64() {
      _builder.clearRequiredInt64()
    }
    /**
     * <code>required int64 requiredInt64 = 7;</code>
     * @return Whether the requiredInt64 field is set.
     */
    public fun hasRequiredInt64(): kotlin.Boolean {
      return _builder.hasRequiredInt64()
    }

    /**
     * <code>optional uint32 optionalUint32 = 8;</code>
     */
    public var optionalUint32: kotlin.Int
      @JvmName("getOptionalUint32")
      get() = _builder.getOptionalUint32()
      @JvmName("setOptionalUint32")
      set(value) {
        _builder.setOptionalUint32(value)
      }
    /**
     * <code>optional uint32 optionalUint32 = 8;</code>
     */
    public fun clearOptionalUint32() {
      _builder.clearOptionalUint32()
    }
    /**
     * <code>optional uint32 optionalUint32 = 8;</code>
     * @return Whether the optionalUint32 field is set.
     */
    public fun hasOptionalUint32(): kotlin.Boolean {
      return _builder.hasOptionalUint32()
    }

    /**
     * <code>required uint32 requiredUint32 = 12;</code>
     */
    public var requiredUint32: kotlin.Int
      @JvmName("getRequiredUint32")
      get() = _builder.getRequiredUint32()
      @JvmName("setRequiredUint32")
      set(value) {
        _builder.setRequiredUint32(value)
      }
    /**
     * <code>required uint32 requiredUint32 = 12;</code>
     */
    public fun clearRequiredUint32() {
      _builder.clearRequiredUint32()
    }
    /**
     * <code>required uint32 requiredUint32 = 12;</code>
     * @return Whether the requiredUint32 field is set.
     */
    public fun hasRequiredUint32(): kotlin.Boolean {
      return _builder.hasRequiredUint32()
    }

    /**
     * <code>optional uint64 optionalUint64 = 13;</code>
     */
    public var optionalUint64: kotlin.Long
      @JvmName("getOptionalUint64")
      get() = _builder.getOptionalUint64()
      @JvmName("setOptionalUint64")
      set(value) {
        _builder.setOptionalUint64(value)
      }
    /**
     * <code>optional uint64 optionalUint64 = 13;</code>
     */
    public fun clearOptionalUint64() {
      _builder.clearOptionalUint64()
    }
    /**
     * <code>optional uint64 optionalUint64 = 13;</code>
     * @return Whether the optionalUint64 field is set.
     */
    public fun hasOptionalUint64(): kotlin.Boolean {
      return _builder.hasOptionalUint64()
    }

    /**
     * <code>required uint64 requiredUint64 = 14;</code>
     */
    public var requiredUint64: kotlin.Long
      @JvmName("getRequiredUint64")
      get() = _builder.getRequiredUint64()
      @JvmName("setRequiredUint64")
      set(value) {
        _builder.setRequiredUint64(value)
      }
    /**
     * <code>required uint64 requiredUint64 = 14;</code>
     */
    public fun clearRequiredUint64() {
      _builder.clearRequiredUint64()
    }
    /**
     * <code>required uint64 requiredUint64 = 14;</code>
     * @return Whether the requiredUint64 field is set.
     */
    public fun hasRequiredUint64(): kotlin.Boolean {
      return _builder.hasRequiredUint64()
    }

    /**
     * <code>optional sint32 optionalSint32 = 16;</code>
     */
    public var optionalSint32: kotlin.Int
      @JvmName("getOptionalSint32")
      get() = _builder.getOptionalSint32()
      @JvmName("setOptionalSint32")
      set(value) {
        _builder.setOptionalSint32(value)
      }
    /**
     * <code>optional sint32 optionalSint32 = 16;</code>
     */
    public fun clearOptionalSint32() {
      _builder.clearOptionalSint32()
    }
    /**
     * <code>optional sint32 optionalSint32 = 16;</code>
     * @return Whether the optionalSint32 field is set.
     */
    public fun hasOptionalSint32(): kotlin.Boolean {
      return _builder.hasOptionalSint32()
    }

    /**
     * <code>required sint32 requiredSint32 = 17;</code>
     */
    public var requiredSint32: kotlin.Int
      @JvmName("getRequiredSint32")
      get() = _builder.getRequiredSint32()
      @JvmName("setRequiredSint32")
      set(value) {
        _builder.setRequiredSint32(value)
      }
    /**
     * <code>required sint32 requiredSint32 = 17;</code>
     */
    public fun clearRequiredSint32() {
      _builder.clearRequiredSint32()
    }
    /**
     * <code>required sint32 requiredSint32 = 17;</code>
     * @return Whether the requiredSint32 field is set.
     */
    public fun hasRequiredSint32(): kotlin.Boolean {
      return _builder.hasRequiredSint32()
    }

    /**
     * <code>optional sint64 optionalSint64 = 18;</code>
     */
    public var optionalSint64: kotlin.Long
      @JvmName("getOptionalSint64")
      get() = _builder.getOptionalSint64()
      @JvmName("setOptionalSint64")
      set(value) {
        _builder.setOptionalSint64(value)
      }
    /**
     * <code>optional sint64 optionalSint64 = 18;</code>
     */
    public fun clearOptionalSint64() {
      _builder.clearOptionalSint64()
    }
    /**
     * <code>optional sint64 optionalSint64 = 18;</code>
     * @return Whether the optionalSint64 field is set.
     */
    public fun hasOptionalSint64(): kotlin.Boolean {
      return _builder.hasOptionalSint64()
    }

    /**
     * <code>required sint64 requiredSint64 = 19;</code>
     */
    public var requiredSint64: kotlin.Long
      @JvmName("getRequiredSint64")
      get() = _builder.getRequiredSint64()
      @JvmName("setRequiredSint64")
      set(value) {
        _builder.setRequiredSint64(value)
      }
    /**
     * <code>required sint64 requiredSint64 = 19;</code>
     */
    public fun clearRequiredSint64() {
      _builder.clearRequiredSint64()
    }
    /**
     * <code>required sint64 requiredSint64 = 19;</code>
     * @return Whether the requiredSint64 field is set.
     */
    public fun hasRequiredSint64(): kotlin.Boolean {
      return _builder.hasRequiredSint64()
    }

    /**
     * <code>optional fixed32 optionalFixed32 = 20;</code>
     */
    public var optionalFixed32: kotlin.Int
      @JvmName("getOptionalFixed32")
      get() = _builder.getOptionalFixed32()
      @JvmName("setOptionalFixed32")
      set(value) {
        _builder.setOptionalFixed32(value)
      }
    /**
     * <code>optional fixed32 optionalFixed32 = 20;</code>
     */
    public fun clearOptionalFixed32() {
      _builder.clearOptionalFixed32()
    }
    /**
     * <code>optional fixed32 optionalFixed32 = 20;</code>
     * @return Whether the optionalFixed32 field is set.
     */
    public fun hasOptionalFixed32(): kotlin.Boolean {
      return _builder.hasOptionalFixed32()
    }

    /**
     * <code>required fixed32 requiredFixed32 = 21;</code>
     */
    public var requiredFixed32: kotlin.Int
      @JvmName("getRequiredFixed32")
      get() = _builder.getRequiredFixed32()
      @JvmName("setRequiredFixed32")
      set(value) {
        _builder.setRequiredFixed32(value)
      }
    /**
     * <code>required fixed32 requiredFixed32 = 21;</code>
     */
    public fun clearRequiredFixed32() {
      _builder.clearRequiredFixed32()
    }
    /**
     * <code>required fixed32 requiredFixed32 = 21;</code>
     * @return Whether the requiredFixed32 field is set.
     */
    public fun hasRequiredFixed32(): kotlin.Boolean {
      return _builder.hasRequiredFixed32()
    }

    /**
     * <code>optional fixed64 optionalFixed64 = 22;</code>
     */
    public var optionalFixed64: kotlin.Long
      @JvmName("getOptionalFixed64")
      get() = _builder.getOptionalFixed64()
      @JvmName("setOptionalFixed64")
      set(value) {
        _builder.setOptionalFixed64(value)
      }
    /**
     * <code>optional fixed64 optionalFixed64 = 22;</code>
     */
    public fun clearOptionalFixed64() {
      _builder.clearOptionalFixed64()
    }
    /**
     * <code>optional fixed64 optionalFixed64 = 22;</code>
     * @return Whether the optionalFixed64 field is set.
     */
    public fun hasOptionalFixed64(): kotlin.Boolean {
      return _builder.hasOptionalFixed64()
    }

    /**
     * <code>required fixed64 requiredFixed64 = 23;</code>
     */
    public var requiredFixed64: kotlin.Long
      @JvmName("getRequiredFixed64")
      get() = _builder.getRequiredFixed64()
      @JvmName("setRequiredFixed64")
      set(value) {
        _builder.setRequiredFixed64(value)
      }
    /**
     * <code>required fixed64 requiredFixed64 = 23;</code>
     */
    public fun clearRequiredFixed64() {
      _builder.clearRequiredFixed64()
    }
    /**
     * <code>required fixed64 requiredFixed64 = 23;</code>
     * @return Whether the requiredFixed64 field is set.
     */
    public fun hasRequiredFixed64(): kotlin.Boolean {
      return _builder.hasRequiredFixed64()
    }

    /**
     * <code>optional sfixed32 optionalSfixed32 = 24;</code>
     */
    public var optionalSfixed32: kotlin.Int
      @JvmName("getOptionalSfixed32")
      get() = _builder.getOptionalSfixed32()
      @JvmName("setOptionalSfixed32")
      set(value) {
        _builder.setOptionalSfixed32(value)
      }
    /**
     * <code>optional sfixed32 optionalSfixed32 = 24;</code>
     */
    public fun clearOptionalSfixed32() {
      _builder.clearOptionalSfixed32()
    }
    /**
     * <code>optional sfixed32 optionalSfixed32 = 24;</code>
     * @return Whether the optionalSfixed32 field is set.
     */
    public fun hasOptionalSfixed32(): kotlin.Boolean {
      return _builder.hasOptionalSfixed32()
    }

    /**
     * <code>required sfixed32 requiredSfixed32 = 25;</code>
     */
    public var requiredSfixed32: kotlin.Int
      @JvmName("getRequiredSfixed32")
      get() = _builder.getRequiredSfixed32()
      @JvmName("setRequiredSfixed32")
      set(value) {
        _builder.setRequiredSfixed32(value)
      }
    /**
     * <code>required sfixed32 requiredSfixed32 = 25;</code>
     */
    public fun clearRequiredSfixed32() {
      _builder.clearRequiredSfixed32()
    }
    /**
     * <code>required sfixed32 requiredSfixed32 = 25;</code>
     * @return Whether the requiredSfixed32 field is set.
     */
    public fun hasRequiredSfixed32(): kotlin.Boolean {
      return _builder.hasRequiredSfixed32()
    }

    /**
     * <code>optional sfixed64 optionalSfixed64 = 26;</code>
     */
    public var optionalSfixed64: kotlin.Long
      @JvmName("getOptionalSfixed64")
      get() = _builder.getOptionalSfixed64()
      @JvmName("setOptionalSfixed64")
      set(value) {
        _builder.setOptionalSfixed64(value)
      }
    /**
     * <code>optional sfixed64 optionalSfixed64 = 26;</code>
     */
    public fun clearOptionalSfixed64() {
      _builder.clearOptionalSfixed64()
    }
    /**
     * <code>optional sfixed64 optionalSfixed64 = 26;</code>
     * @return Whether the optionalSfixed64 field is set.
     */
    public fun hasOptionalSfixed64(): kotlin.Boolean {
      return _builder.hasOptionalSfixed64()
    }

    /**
     * <code>required sfixed64 requiredSfixed64 = 27;</code>
     */
    public var requiredSfixed64: kotlin.Long
      @JvmName("getRequiredSfixed64")
      get() = _builder.getRequiredSfixed64()
      @JvmName("setRequiredSfixed64")
      set(value) {
        _builder.setRequiredSfixed64(value)
      }
    /**
     * <code>required sfixed64 requiredSfixed64 = 27;</code>
     */
    public fun clearRequiredSfixed64() {
      _builder.clearRequiredSfixed64()
    }
    /**
     * <code>required sfixed64 requiredSfixed64 = 27;</code>
     * @return Whether the requiredSfixed64 field is set.
     */
    public fun hasRequiredSfixed64(): kotlin.Boolean {
      return _builder.hasRequiredSfixed64()
    }

    /**
     * <code>optional bool optionalBool = 28;</code>
     */
    public var optionalBool: kotlin.Boolean
      @JvmName("getOptionalBool")
      get() = _builder.getOptionalBool()
      @JvmName("setOptionalBool")
      set(value) {
        _builder.setOptionalBool(value)
      }
    /**
     * <code>optional bool optionalBool = 28;</code>
     */
    public fun clearOptionalBool() {
      _builder.clearOptionalBool()
    }
    /**
     * <code>optional bool optionalBool = 28;</code>
     * @return Whether the optionalBool field is set.
     */
    public fun hasOptionalBool(): kotlin.Boolean {
      return _builder.hasOptionalBool()
    }

    /**
     * <code>required bool requiredBool = 29;</code>
     */
    public var requiredBool: kotlin.Boolean
      @JvmName("getRequiredBool")
      get() = _builder.getRequiredBool()
      @JvmName("setRequiredBool")
      set(value) {
        _builder.setRequiredBool(value)
      }
    /**
     * <code>required bool requiredBool = 29;</code>
     */
    public fun clearRequiredBool() {
      _builder.clearRequiredBool()
    }
    /**
     * <code>required bool requiredBool = 29;</code>
     * @return Whether the requiredBool field is set.
     */
    public fun hasRequiredBool(): kotlin.Boolean {
      return _builder.hasRequiredBool()
    }

    /**
     * <code>optional string optionalString = 30;</code>
     */
    public var optionalString: kotlin.String
      @JvmName("getOptionalString")
      get() = _builder.getOptionalString()
      @JvmName("setOptionalString")
      set(value) {
        _builder.setOptionalString(value)
      }
    /**
     * <code>optional string optionalString = 30;</code>
     */
    public fun clearOptionalString() {
      _builder.clearOptionalString()
    }
    /**
     * <code>optional string optionalString = 30;</code>
     * @return Whether the optionalString field is set.
     */
    public fun hasOptionalString(): kotlin.Boolean {
      return _builder.hasOptionalString()
    }

    /**
     * <code>required string requiredString = 31;</code>
     */
    public var requiredString: kotlin.String
      @JvmName("getRequiredString")
      get() = _builder.getRequiredString()
      @JvmName("setRequiredString")
      set(value) {
        _builder.setRequiredString(value)
      }
    /**
     * <code>required string requiredString = 31;</code>
     */
    public fun clearRequiredString() {
      _builder.clearRequiredString()
    }
    /**
     * <code>required string requiredString = 31;</code>
     * @return Whether the requiredString field is set.
     */
    public fun hasRequiredString(): kotlin.Boolean {
      return _builder.hasRequiredString()
    }

    /**
     * <code>optional bytes optionalBytes = 32;</code>
     */
    public var optionalBytes: com.google.protobuf.ByteString
      @JvmName("getOptionalBytes")
      get() = _builder.getOptionalBytes()
      @JvmName("setOptionalBytes")
      set(value) {
        _builder.setOptionalBytes(value)
      }
    /**
     * <code>optional bytes optionalBytes = 32;</code>
     */
    public fun clearOptionalBytes() {
      _builder.clearOptionalBytes()
    }
    /**
     * <code>optional bytes optionalBytes = 32;</code>
     * @return Whether the optionalBytes field is set.
     */
    public fun hasOptionalBytes(): kotlin.Boolean {
      return _builder.hasOptionalBytes()
    }

    /**
     * <code>required bytes requiredBytes = 33;</code>
     */
    public var requiredBytes: com.google.protobuf.ByteString
      @JvmName("getRequiredBytes")
      get() = _builder.getRequiredBytes()
      @JvmName("setRequiredBytes")
      set(value) {
        _builder.setRequiredBytes(value)
      }
    /**
     * <code>required bytes requiredBytes = 33;</code>
     */
    public fun clearRequiredBytes() {
      _builder.clearRequiredBytes()
    }
    /**
     * <code>required bytes requiredBytes = 33;</code>
     * @return Whether the requiredBytes field is set.
     */
    public fun hasRequiredBytes(): kotlin.Boolean {
      return _builder.hasRequiredBytes()
    }

    /**
     * <code>optional int32 optionalWithDefaultInt32 = 34 [default = 10];</code>
     */
    public var optionalWithDefaultInt32: kotlin.Int
      @JvmName("getOptionalWithDefaultInt32")
      get() = _builder.getOptionalWithDefaultInt32()
      @JvmName("setOptionalWithDefaultInt32")
      set(value) {
        _builder.setOptionalWithDefaultInt32(value)
      }
    /**
     * <code>optional int32 optionalWithDefaultInt32 = 34 [default = 10];</code>
     */
    public fun clearOptionalWithDefaultInt32() {
      _builder.clearOptionalWithDefaultInt32()
    }
    /**
     * <code>optional int32 optionalWithDefaultInt32 = 34 [default = 10];</code>
     * @return Whether the optionalWithDefaultInt32 field is set.
     */
    public fun hasOptionalWithDefaultInt32(): kotlin.Boolean {
      return _builder.hasOptionalWithDefaultInt32()
    }

    /**
     * <code>optional string optionalWithDefaultString = 35 [default = "temp_holder"];</code>
     */
    public var optionalWithDefaultString: kotlin.String
      @JvmName("getOptionalWithDefaultString")
      get() = _builder.getOptionalWithDefaultString()
      @JvmName("setOptionalWithDefaultString")
      set(value) {
        _builder.setOptionalWithDefaultString(value)
      }
    /**
     * <code>optional string optionalWithDefaultString = 35 [default = "temp_holder"];</code>
     */
    public fun clearOptionalWithDefaultString() {
      _builder.clearOptionalWithDefaultString()
    }
    /**
     * <code>optional string optionalWithDefaultString = 35 [default = "temp_holder"];</code>
     * @return Whether the optionalWithDefaultString field is set.
     */
    public fun hasOptionalWithDefaultString(): kotlin.Boolean {
      return _builder.hasOptionalWithDefaultString()
    }

    /**
     * <code>optional .test2.TestService2Response.Corpus corpus = 36 [default = UNIVERSAL];</code>
     */
    public var corpus: com.proto.test2.TestService2Response.Corpus
      @JvmName("getCorpus")
      get() = _builder.getCorpus()
      @JvmName("setCorpus")
      set(value) {
        _builder.setCorpus(value)
      }
    /**
     * <code>optional .test2.TestService2Response.Corpus corpus = 36 [default = UNIVERSAL];</code>
     */
    public fun clearCorpus() {
      _builder.clearCorpus()
    }
    /**
     * <code>optional .test2.TestService2Response.Corpus corpus = 36 [default = UNIVERSAL];</code>
     * @return Whether the corpus field is set.
     */
    public fun hasCorpus(): kotlin.Boolean {
      return _builder.hasCorpus()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SamplesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     */
     public val samples: com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSamplesList()
      )
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     * @param value The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSamples")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>.add(value: kotlin.Int) {
      _builder.addSamples(value)
    }/**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     * @param value The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     * @param values The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSamples")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllSamples(values)
    }/**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     * @param values The samples to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The samples to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSamples")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setSamples(index, value)
    }/**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#other
     * </pre>
     *
     * <code>repeated int32 samples = 37 [packed = true];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSamples")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, SamplesProxy>.clear() {
      _builder.clearSamples()
    }
    /**
     * <code>string name = 38;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 38;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }
    /**
     * <code>string name = 38;</code>
     * @return Whether the name field is set.
     */
    public fun hasName(): kotlin.Boolean {
      return _builder.hasName()
    }

    /**
     * <code>.test2.TestService2Response.NestedMessage nested = 39;</code>
     */
    public var nested: com.proto.test2.TestService2Response.NestedMessage
      @JvmName("getNested")
      get() = _builder.getNested()
      @JvmName("setNested")
      set(value) {
        _builder.setNested(value)
      }
    /**
     * <code>.test2.TestService2Response.NestedMessage nested = 39;</code>
     */
    public fun clearNested() {
      _builder.clearNested()
    }
    /**
     * <code>.test2.TestService2Response.NestedMessage nested = 39;</code>
     * @return Whether the nested field is set.
     */
    public fun hasNested(): kotlin.Boolean {
      return _builder.hasNested()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MapProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#maps (MAps can't have lables)
     * </pre>
     *
     * <code>map&lt;string, .test2.TestService2Response.NestedMessage&gt; map = 40;</code>
     */
     public val map: com.google.protobuf.kotlin.DslMap<kotlin.String, com.proto.test2.TestService2Response.NestedMessage, MapProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMapMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getMapMap()
      )
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#maps (MAps can't have lables)
     * </pre>
     *
     * <code>map&lt;string, .test2.TestService2Response.NestedMessage&gt; map = 40;</code>
     */
    @JvmName("putMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.proto.test2.TestService2Response.NestedMessage, MapProxy>
      .put(key: kotlin.String, value: com.proto.test2.TestService2Response.NestedMessage) {
         _builder.putMap(key, value)
       }
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#maps (MAps can't have lables)
     * </pre>
     *
     * <code>map&lt;string, .test2.TestService2Response.NestedMessage&gt; map = 40;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMap")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.proto.test2.TestService2Response.NestedMessage, MapProxy>
      .set(key: kotlin.String, value: com.proto.test2.TestService2Response.NestedMessage) {
         put(key, value)
       }
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#maps (MAps can't have lables)
     * </pre>
     *
     * <code>map&lt;string, .test2.TestService2Response.NestedMessage&gt; map = 40;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.proto.test2.TestService2Response.NestedMessage, MapProxy>
      .remove(key: kotlin.String) {
         _builder.removeMap(key)
       }
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#maps (MAps can't have lables)
     * </pre>
     *
     * <code>map&lt;string, .test2.TestService2Response.NestedMessage&gt; map = 40;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.proto.test2.TestService2Response.NestedMessage, MapProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.proto.test2.TestService2Response.NestedMessage>) {
         _builder.putAllMap(map)
       }
    /**
     * <pre>
     *  https://developers.google.com/protocol-buffers/docs/proto#maps (MAps can't have lables)
     * </pre>
     *
     * <code>map&lt;string, .test2.TestService2Response.NestedMessage&gt; map = 40;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.proto.test2.TestService2Response.NestedMessage, MapProxy>
      .clear() {
         _builder.clearMap()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MapFieldProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     */
     public val mapField: com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMapFieldList()
      )
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     * @param value The mapField to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMapField")
    public fun com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>.add(value: com.proto.test2.TestService2Response.MapFieldEntry) {
      _builder.addMapField(value)
    }
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     * @param value The mapField to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMapField")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>.plusAssign(value: com.proto.test2.TestService2Response.MapFieldEntry) {
      add(value)
    }
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     * @param values The mapField to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMapField")
    public fun com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>.addAll(values: kotlin.collections.Iterable<com.proto.test2.TestService2Response.MapFieldEntry>) {
      _builder.addAllMapField(values)
    }
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     * @param values The mapField to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMapField")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>.plusAssign(values: kotlin.collections.Iterable<com.proto.test2.TestService2Response.MapFieldEntry>) {
      addAll(values)
    }
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     * @param index The index to set the value at.
     * @param value The mapField to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMapField")
    public operator fun com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>.set(index: kotlin.Int, value: com.proto.test2.TestService2Response.MapFieldEntry) {
      _builder.setMapField(index, value)
    }
    /**
     * <code>repeated .test2.TestService2Response.MapFieldEntry map_field = 41;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMapField")
    public fun com.google.protobuf.kotlin.DslList<com.proto.test2.TestService2Response.MapFieldEntry, MapFieldProxy>.clear() {
      _builder.clearMapField()
    }
    public val oneOfFieldCase: com.proto.test2.TestService2Response.OneOfFieldCase
      @JvmName("getOneOfFieldCase")
      get() = _builder.getOneOfFieldCase()

    public fun clearOneOfField() {
      _builder.clearOneOfField()
    }
    @Suppress("UNCHECKED_CAST")
    @kotlin.jvm.JvmSynthetic
    public operator fun <T : kotlin.Any> get(extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, T>): T {
      return if (extension.isRepeated) {
        get(extension as com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, List<*>>) as T
      } else {
        _builder.getExtension(extension)
      }
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @kotlin.jvm.JvmName("-getRepeatedExtension")
    public operator fun <E : kotlin.Any> get(
      extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, List<E>>
    ): com.google.protobuf.kotlin.ExtensionList<E, com.proto.test2.TestService2Response> {
      return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
    }

    @kotlin.jvm.JvmSynthetic
    public operator fun contains(extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, *>): Boolean {
      return _builder.hasExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    public fun clear(extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, *>) {
      _builder.clearExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun <T : kotlin.Any> setExtension(extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, T>, value: T) {
      _builder.setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <T : Comparable<T>> set(
      extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun set(
      extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, com.google.protobuf.ByteString>,
      value: com.google.protobuf.ByteString
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <T : com.google.protobuf.MessageLite> set(
      extension: com.google.protobuf.ExtensionLite<com.proto.test2.TestService2Response, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    public fun<E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, com.proto.test2.TestService2Response>.add(value: E) {
      _builder.addExtension(this.extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, com.proto.test2.TestService2Response>.plusAssign(value: E) {
      add(value)
    }

    @kotlin.jvm.JvmSynthetic
    public fun<E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, com.proto.test2.TestService2Response>.addAll(values: Iterable<E>) {
      for (value in values) {
        add(value)
      }
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, com.proto.test2.TestService2Response>.plusAssign(values: Iterable<E>) {
      addAll(values)
    }

    @kotlin.jvm.JvmSynthetic
    public operator fun <E : kotlin.Any> com.google.protobuf.kotlin.ExtensionList<E, com.proto.test2.TestService2Response>.set(index: Int, value: E) {
      _builder.setExtension(this.extension, index, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline fun com.google.protobuf.kotlin.ExtensionList<*, com.proto.test2.TestService2Response>.clear() {
      clear(extension)
    }

  }
  @kotlin.jvm.JvmName("-initializenestedMessage")
  public inline fun nestedMessage(block: com.proto.test2.TestService2ResponseKt.NestedMessageKt.Dsl.() -> kotlin.Unit): com.proto.test2.TestService2Response.NestedMessage =
    com.proto.test2.TestService2ResponseKt.NestedMessageKt.Dsl._create(com.proto.test2.TestService2Response.NestedMessage.newBuilder()).apply { block() }._build()
  public object NestedMessageKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.proto.test2.TestService2Response.NestedMessage.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.proto.test2.TestService2Response.NestedMessage.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.proto.test2.TestService2Response.NestedMessage = _builder.build()

      /**
       * <code>required string url = 1;</code>
       */
      public var url: kotlin.String
        @JvmName("getUrl")
        get() = _builder.getUrl()
        @JvmName("setUrl")
        set(value) {
          _builder.setUrl(value)
        }
      /**
       * <code>required string url = 1;</code>
       */
      public fun clearUrl() {
        _builder.clearUrl()
      }
      /**
       * <code>required string url = 1;</code>
       * @return Whether the url field is set.
       */
      public fun hasUrl(): kotlin.Boolean {
        return _builder.hasUrl()
      }

      /**
       * <code>optional string title = 2;</code>
       */
      public var title: kotlin.String
        @JvmName("getTitle")
        get() = _builder.getTitle()
        @JvmName("setTitle")
        set(value) {
          _builder.setTitle(value)
        }
      /**
       * <code>optional string title = 2;</code>
       */
      public fun clearTitle() {
        _builder.clearTitle()
      }
      /**
       * <code>optional string title = 2;</code>
       * @return Whether the title field is set.
       */
      public fun hasTitle(): kotlin.Boolean {
        return _builder.hasTitle()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class SnippetsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated string snippets = 3;</code>
       * @return A list containing the snippets.
       */
      public val snippets: com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>
        @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getSnippetsList()
        )
      /**
       * <code>repeated string snippets = 3;</code>
       * @param value The snippets to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addSnippets")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>.add(value: kotlin.String) {
        _builder.addSnippets(value)
      }
      /**
       * <code>repeated string snippets = 3;</code>
       * @param value The snippets to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignSnippets")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>.plusAssign(value: kotlin.String) {
        add(value)
      }
      /**
       * <code>repeated string snippets = 3;</code>
       * @param values The snippets to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllSnippets")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
        _builder.addAllSnippets(values)
      }
      /**
       * <code>repeated string snippets = 3;</code>
       * @param values The snippets to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllSnippets")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
        addAll(values)
      }
      /**
       * <code>repeated string snippets = 3;</code>
       * @param index The index to set the value at.
       * @param value The snippets to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setSnippets")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>.set(index: kotlin.Int, value: kotlin.String) {
        _builder.setSnippets(index, value)
      }/**
       * <code>repeated string snippets = 3;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearSnippets")
      public fun com.google.protobuf.kotlin.DslList<kotlin.String, SnippetsProxy>.clear() {
        _builder.clearSnippets()
      }}
  }
  @kotlin.jvm.JvmName("-initializemapFieldEntry")
  public inline fun mapFieldEntry(block: com.proto.test2.TestService2ResponseKt.MapFieldEntryKt.Dsl.() -> kotlin.Unit): com.proto.test2.TestService2Response.MapFieldEntry =
    com.proto.test2.TestService2ResponseKt.MapFieldEntryKt.Dsl._create(com.proto.test2.TestService2Response.MapFieldEntry.newBuilder()).apply { block() }._build()
  public object MapFieldEntryKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: com.proto.test2.TestService2Response.MapFieldEntry.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: com.proto.test2.TestService2Response.MapFieldEntry.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): com.proto.test2.TestService2Response.MapFieldEntry = _builder.build()

      /**
       * <code>optional string key = 1;</code>
       */
      public var key: kotlin.String
        @JvmName("getKey")
        get() = _builder.getKey()
        @JvmName("setKey")
        set(value) {
          _builder.setKey(value)
        }
      /**
       * <code>optional string key = 1;</code>
       */
      public fun clearKey() {
        _builder.clearKey()
      }
      /**
       * <code>optional string key = 1;</code>
       * @return Whether the key field is set.
       */
      public fun hasKey(): kotlin.Boolean {
        return _builder.hasKey()
      }

      /**
       * <code>optional .test2.TestService2Response.NestedMessage value = 2;</code>
       */
      public var value: com.proto.test2.TestService2Response.NestedMessage
        @JvmName("getValue")
        get() = _builder.getValue()
        @JvmName("setValue")
        set(value) {
          _builder.setValue(value)
        }
      /**
       * <code>optional .test2.TestService2Response.NestedMessage value = 2;</code>
       */
      public fun clearValue() {
        _builder.clearValue()
      }
      /**
       * <code>optional .test2.TestService2Response.NestedMessage value = 2;</code>
       * @return Whether the value field is set.
       */
      public fun hasValue(): kotlin.Boolean {
        return _builder.hasValue()
      }
      public val MapFieldEntryKt.Dsl.valueOrNull: com.proto.test2.TestService2Response.NestedMessage?
        get() = _builder.valueOrNull
    }
  }
}
public inline fun com.proto.test2.TestService2Response.copy(block: com.proto.test2.TestService2ResponseKt.Dsl.() -> kotlin.Unit): com.proto.test2.TestService2Response =
  com.proto.test2.TestService2ResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun com.proto.test2.TestService2Response.NestedMessage.copy(block: com.proto.test2.TestService2ResponseKt.NestedMessageKt.Dsl.() -> kotlin.Unit): com.proto.test2.TestService2Response.NestedMessage =
  com.proto.test2.TestService2ResponseKt.NestedMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun com.proto.test2.TestService2Response.MapFieldEntry.copy(block: com.proto.test2.TestService2ResponseKt.MapFieldEntryKt.Dsl.() -> kotlin.Unit): com.proto.test2.TestService2Response.MapFieldEntry =
  com.proto.test2.TestService2ResponseKt.MapFieldEntryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.proto.test2.TestService2Response.MapFieldEntryOrBuilder.valueOrNull: com.proto.test2.TestService2Response.NestedMessage?
  get() = if (hasValue()) getValue() else null

val com.proto.test2.TestService2ResponseOrBuilder.nestedOrNull: com.proto.test2.TestService2Response.NestedMessage?
  get() = if (hasNested()) getNested() else null

