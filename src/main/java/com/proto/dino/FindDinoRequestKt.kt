//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: dino.proto

package com.proto.dino;

@kotlin.jvm.JvmName("-initializefindDinoRequest")
public inline fun findDinoRequest(block: com.proto.dino.FindDinoRequestKt.Dsl.() -> kotlin.Unit): com.proto.dino.FindDinoRequest =
  com.proto.dino.FindDinoRequestKt.Dsl._create(com.proto.dino.FindDinoRequest.newBuilder()).apply { block() }._build()
public object FindDinoRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.proto.dino.FindDinoRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.proto.dino.FindDinoRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.proto.dino.FindDinoRequest = _builder.build()

    /**
     * <pre>
     * Search string
     * </pre>
     *
     * <code>string searchString = 1;</code>
     */
    public var searchString: kotlin.String
      @JvmName("getSearchString")
      get() = _builder.getSearchString()
      @JvmName("setSearchString")
      set(value) {
        _builder.setSearchString(value)
      }
    /**
     * <pre>
     * Search string
     * </pre>
     *
     * <code>string searchString = 1;</code>
     */
    public fun clearSearchString() {
      _builder.clearSearchString()
    }
  }
}
public inline fun com.proto.dino.FindDinoRequest.copy(block: com.proto.dino.FindDinoRequestKt.Dsl.() -> kotlin.Unit): com.proto.dino.FindDinoRequest =
  com.proto.dino.FindDinoRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

